package com.ajt.loggin;

import java.util.concurrent.TimeUnit;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/*
 * This Java source file was auto generated by running 'gradle buildInit --type java-library'
 * by 'alist' at '16/04/17 18:05' with Gradle 2.14.1
 *
 * @author alist, @date 16/04/17 18:05
 */
public class Library {
	Logger logger = LoggerFactory.getLogger(Library.class);

	public boolean someLibraryMethod() {
		return true;
	}

	public static void main(String[] args) {
		Library l = new Library();
		l.run();
	}

	public Library() {
	}

	public void run() {
		bench(false, 10);
		bench(true, 1_000_000L);
	}

	void bench(boolean print, long copy) {
		start();
		for (long a = 0; a < copy; a++) {
			runSimpleLog(a);
		}
		finish();
		if (print) {
			logger.error("BenchTook us={}", TimeUnit.NANOSECONDS.toMicros(finish - start));
		}
	}

	long start = 0;
	long finish = 0;

	void start() {
		start = System.nanoTime();
	}

	void finish() {
		finish = System.nanoTime();
	}


	void runSimpleLog(long copy) {
		logger.info("Hello World {}",copy);
		logger.trace("This is a trace message {}",copy);
		logger.debug("This is a debug message {}",copy);
		logger.info("This is an info message {}",copy);
		logger.warn("This is a warn message {}",copy);
		logger.error("This is an error message {}",copy);
	}
}
